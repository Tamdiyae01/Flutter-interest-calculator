import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:vibration/vibration.dart';
import 'dart:math';

void main() => runApp(MaterialApp(
  home: Home(),
));

class Home extends StatefulWidget {
  @override
  _HomeState createState() => _HomeState();
}

class _HomeState extends State<Home> {


  int dropdownValue = 3;
  double _sliderValue = 8.0;
  int endValue;
  var temp1;
  bool _visibility = false;
  TextEditingController amount =  new TextEditingController();
  var amounttempFinal;



  @override
  Widget build(BuildContext context) {
    double heightDevice = MediaQuery.of(context).size.height;
    return Scaffold(
      resizeToAvoidBottomPadding: false,


      body: SingleChildScrollView(
        child: CustomPaint(
          painter: BluePainter(),
          child: Container(
            child: Padding(
              padding:  EdgeInsets.fromLTRB(25, (heightDevice*0.1), 25, 0),
              child: Column(
                children: <Widget>[

                  Text(
                    'Estimated Interest',
                    style: TextStyle(
                        color: Colors.white,
                        fontFamily: 'Titillium',
                        fontSize: 20
                    ),
                  ),
                  Padding(
                    padding: EdgeInsets.fromLTRB(0, (heightDevice*0.001), 0, 0),
                    child:   Text(
                      '\$ ${endValue == null ? "---": "$endValue"}',
                      style: TextStyle(
                        fontSize: 80,
                        color: Colors.white,
                        fontFamily: 'Titillium',
                      ),
                    ),
                  ),

                  SizedBox(
                    height: 20,
                  ),
                  Padding(
                    padding: EdgeInsets.fromLTRB(0, (heightDevice*0.01), 0, 0),
                    child: RaisedButton(
                      padding: EdgeInsets.fromLTRB(22, 9, 22, 9),
                      color: Color.fromRGBO(65, 200, 235, 1),
                      onPressed: () {
                        var amountFinal = double.parse(amount.text);
                        if((amountFinal != null)&& (_sliderValue != null)&&( dropdownValue != null)) {
                          _sliderValue = (_sliderValue /100) + 1;
                          setState(() {
                            double temp1 = amountFinal * pow(_sliderValue, dropdownValue);
                            endValue = temp1.toInt();
                          });
                        } //todo ADD ELSE IF
                      },
                      child: Text(
                        'Calculate',
                        style: TextStyle(
                          color: Color.fromRGBO(214, 243, 250, 1),
                          fontSize: 17,
                          fontFamily: 'Titillium',
                          fontWeight: FontWeight.w700,
                        ),
                      ),
                    ),
                  ),

                  Padding(
                    padding: const EdgeInsets.only(top:50),
                    child: TextFormField(
                      controller: amount,
                      onChanged: (newAmount) {
                        setState(() {
                          amounttempFinal = double.parse(newAmount);
                        });

                      },
                      decoration: InputDecoration(
                        labelText: 'Total Amount',

                      ),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.only(top:40),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        Text(
                          'Amount of years',
                          style: TextStyle(
                            fontFamily:'Titillium',
                            fontSize: 16,
                          ),
                        ),
                        DropdownButtonHideUnderline(
                          child: DropdownButton<int>(
                            value: dropdownValue,
                            icon: Icon(Icons.keyboard_arrow_down,
                              color: Color.fromRGBO(80, 89, 113, 1) ,),
                            iconSize: 24,
                            isExpanded: true,
                            elevation: 16,
                            onChanged: (newValue) {
                              setState(() {
                                dropdownValue = newValue;
                              });
                            },
                            items: <int>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15].map<DropdownMenuItem<int>>((int value) {
                              return DropdownMenuItem<int>(
                                value: value,
                                child: Text(
                                  '$value years',
                                  style: TextStyle(
                                    fontSize: 18,
                                    fontFamily: 'Titillium',
                                    fontWeight: FontWeight.w700,
                                  ),

                                ),
                              );
                            })
                                .toList(),
                          ),
                        ),
                      ],
                    ),
                  ),

                  Padding(
                    padding: const EdgeInsets.only(top:10.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: <Widget>[
                            Text(
                              'Interest rate',
                              style: TextStyle(
                                fontFamily:'Titillium',
                                fontSize: 16,
                              ),
                            ),
                            Visibility(
                              visible: _visibility,
                              child: Container(
                                transform: Matrix4.translationValues(0.0, 10.0, 0.0),
                                child: Card(
                                  color: Colors.grey[100],
                                  child: Padding(
                                    padding: const EdgeInsets.all(5),
                                    child: Column(
                                      children: <Widget>[
                                        Text(
                                          ' ${temp1 == null ? "" : "$temp1 %"}',
                                          style: TextStyle(
                                            fontFamily:'Titillium',
                                            fontSize: 18,
                                            color: Color.fromRGBO(65, 200, 235, 1),
                                            fontWeight: FontWeight.w700,
                                          ),
                                          textAlign: TextAlign.right,
                                        ),
                                        Text(
                                          '${amounttempFinal == null ? "": "\$ $amounttempFinal"}',
                                          style: TextStyle(
                                            fontFamily:'Titillium',
                                            fontSize: 14,
                                            fontWeight: FontWeight.w700,

                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                              ),
                            ),

                          ],
                        ),

                        Slider(
                          inactiveColor: Color.fromRGBO(231, 237, 245, 1),
                          activeColor: Color.fromRGBO(49, 152, 213, 1),
                          min: 0.1,
                          max: 20.0,
                          onChanged: (newInterest) {
                            setState(() {
                              _sliderValue = newInterest;
                              temp1 = double.parse(newInterest.toStringAsFixed(2));
                              _visibility = true;
                            });
                          },
                          onChangeEnd: (newVibrate){
                            Vibration.vibrate(duration: 10, amplitude: 1);
                          },
                          value: _sliderValue,
                          label: '5',
                        ),
                      ],
                    ),
                  ),

                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: <Widget>[
                      Text(
                        '0%',
                        style: TextStyle(
                          fontFamily:'Titillium',
                          fontSize: 15,
                          color: Color.fromRGBO(77, 91, 127, 1),
                        ),
                      ),
                      Text(
                        '20%',
                        style: TextStyle(
                          fontFamily:'Titillium',
                          fontSize: 15,
                          color: Color.fromRGBO(77, 91, 127, 1),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }


}

class MortageCalc extends StatefulWidget {
  @override
  _MortageCalcState createState() => _MortageCalcState();
}

class _MortageCalcState extends State<MortageCalc> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: CustomScrollView(
        slivers: <Widget>[
          SliverAppBar(
            title: Text('Calculator'),
            expandedHeight: 200,
            floating: false,
            flexibleSpace: FlexibleSpaceBar(
              background: Image.network('https://akm-img-a-in.tosshub.com/sites/btmt/images/stories/invest_660_051719073213.jpg'),
            ),
          ),
          SliverToBoxAdapter(
            child: SizedBox(
              height: 1000,
              child: Center(
                child: Text('Content'),
              ),
            ),
          )

        ],
      ),
    );
  }
}


class BluePainter extends CustomPainter {
  @override

  void paint(Canvas canvas, Size size) {
    final height = size.height / 2;
    final width= size.width;
    Paint paint = Paint();

    Path mainBackground = Path();
    mainBackground.addRect(Rect.fromLTRB(0, 0, width, height));
    paint.color = Color.fromRGBO(0, 10, 238, 1);
    canvas.drawPath(mainBackground, paint);

    Path ovalPath = Path();
    ovalPath.moveTo(0, height );
    ovalPath.quadraticBezierTo(width * 1.2, height * 3, width * 1, height * 0.75);
    paint.color = Colors.grey[100];
    canvas.drawPath(ovalPath, paint);
  }
  @override
  bool shouldRepaint(CustomPainter oldDelegate) {
    return oldDelegate != this;

  }
}
